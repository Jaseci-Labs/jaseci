# Jaseci Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jaseci-account
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: default
  name: jaseci-orc
rules:
  - apiGroups:
      [
        "",
        "admissionregistration.k8s.io",
        "apps",
        "autoscaling",
        "batch",
        "certificates.k8s.io",
        "extensions",
        "networking.k8s.io",
        "policy",
        "rbac.authorization.k8s.io",
        "storage.k8s.io",
        "v1",
      ]
    resources:
      [
        "certificatesigningrequests",
        "clusterroles",
        "clusterrolebindings",
        "configmaps",
        "cronjobs",
        "daemonsets",
        "deployments.apps",
        "deployments",
        "endpoints",
        "horizontalpodautoscalers",
        "ingresses",
        "ingresses/status",
        "jobs",
        "limitranges",
        "mutatingwebhookconfigurations",
        "namespaces",
        "networkpolicies",
        "nodes",
        "nodes/metrics",
        "nodes/proxy",
        "persistentvolumeclaims",
        "persistentvolumes",
        "poddisruptionbudgets",
        "pods",
        "replicasets",
        "replicationcontrollers",
        "resourcequotas",
        "secrets",
        "serviceaccounts",
        "services",
        "statefulsets",
        "storageclasses",
        "validatingwebhookconfigurations",
        "volumeattachments",
      ]
    verbs: ["get", "watch", "list", "update", "patch", "create", "delete"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get", "watch", "list", "update", "patch", "create", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jaseci-orc-rolebinding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: jaseci-account
    namespace: default
roleRef:
  kind: ClusterRole
  name: jaseci-orc
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: jaseci
spec:
  selector:
    pod: jaseci
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jaseci-up
  namespace: default
data:
  prod_up: |-
    cd /jaseci/jaseci_core; source install_live.sh;
    cd /jaseci/jaseci_serv; source install_live.sh;
    cd /jaseci/jaseci_serv; pytest -k JsorcAPIKubeTests --capture=no --log-cli-level=INFO;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaseci
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: jaseci
  template:
    metadata:
      labels:
        pod: jaseci
      name: jaseci
    spec:
      serviceAccountName: jaseci-account
      containers:
        - name: jaseci
          image: jaseci/jaseci:latest
          resources:
            requests:
              memory: "350Mi"
          imagePullPolicy: IfNotPresent
          command: [bash, -c, "source script/prod_up"]
          ports:
            - containerPort: 80
          env:
            - name: PYTHONUNBUFFERED
              value: "0"

            - name: REDIS_HOST
              value: jaseci-redis

            - name: PROMON_HOST
              value: jaseci-prometheus-server

          volumeMounts:
            - name: prod-script
              mountPath: /script
            - name: host-mount
              mountPath: /jaseci/

      volumes:
        - name: prod-script
          configMap:
            name: jaseci-up
        - name: host-mount
          hostPath:
            path: /run/desktop/mnt/host/wsl/jaseci
            type: Directory
---

