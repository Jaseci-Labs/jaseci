import jaclang.compiler.absyntree as ast
from jaclang.compiler.parser import JacParser as JacParser
from jaclang.compiler.passes import Pass as Pass
from jaclang.compiler.passes.main import (
    PyOutPass as PyOutPass,
    pass_schedule as pass_schedule,
)
from jaclang.compiler.passes.tool import JacFormatPass as JacFormatPass
from jaclang.compiler.passes.tool.schedules import format_pass as format_pass

def compile_jac(file_path: str, cache_result: bool = False) -> Pass: ...
def jac_file_to_pass(
    file_path: str, target: type[Pass] | None = None, schedule: list[type[Pass]] = ...
) -> Pass: ...
def jac_str_to_pass(
    jac_str: str,
    file_path: str,
    target: type[Pass] | None = None,
    schedule: list[type[Pass]] = ...,
) -> Pass: ...
def jac_ir_to_pass(
    ir: ast.AstNode, target: type[Pass] | None = None, schedule: list[type[Pass]] = ...
) -> Pass: ...
def jac_pass_to_pass(
    in_pass: Pass, target: type[Pass] | None = None, schedule: list[type[Pass]] = ...
) -> Pass: ...
def jac_file_formatter(
    file_path: str, schedule: list[type[Pass]] = ...
) -> JacFormatPass: ...
