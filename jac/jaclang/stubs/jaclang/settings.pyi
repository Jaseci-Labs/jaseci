from _typeshed import Incomplete
from dataclasses import dataclass

__all__ = ["settings"]

@dataclass
class Settings:
    fuse_type_info_debug: bool = ...
    filter_sym_builtins: bool = ...
    ast_symbol_info_detailed: bool = ...
    pass_timer: bool = ...
    py_raise: bool = ...
    py_raise_deep: bool = ...
    max_line_length: int = ...
    lsp_debug: bool = ...
    config_file_path = ...
    def __post_init__(self) -> None: ...
    def load_all(self) -> None: ...
    def load_config_file(self) -> None: ...
    def load_env_vars(self) -> None: ...
    def str_to_bool(self, value: str) -> bool: ...
    def convert_type(self, value: str) -> bool | str | int: ...
    def __init__(
        self,
        fuse_type_info_debug=...,
        filter_sym_builtins=...,
        ast_symbol_info_detailed=...,
        pass_timer=...,
        py_raise=...,
        py_raise_deep=...,
        max_line_length=...,
        lsp_debug=...,
    ) -> None: ...

settings: Incomplete
