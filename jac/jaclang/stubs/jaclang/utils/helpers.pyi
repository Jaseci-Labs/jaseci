import pdb
from _typeshed import Incomplete

def pascal_to_snake(pascal_string: str) -> str: ...
def heading_to_snake(heading: str) -> str: ...
def add_line_numbers(s: str) -> str: ...
def clip_code_section(s: str, target_line: int, line_range: int) -> str: ...
def get_ast_nodes_as_snake_case() -> list[str]: ...
def extract_headings(file_path: str) -> dict[str, tuple[int, int]]: ...
def auto_generate_refs() -> None: ...
def is_standard_lib_module(module_path: str) -> bool: ...

class Jdb(pdb.Pdb):
    prompt: str
    def __init__(self, *args, **kwargs) -> None: ...
    def has_breakpoint(self, bytecode: bytes) -> bool: ...

debugger: Incomplete
