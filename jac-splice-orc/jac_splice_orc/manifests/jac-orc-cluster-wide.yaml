apiVersion: v1
kind: ServiceAccount
metadata:
  name: jac-orc
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jac-orc
rules:
  - apiGroups: [""]
    resources:
      [
        "namespaces",
        "pods",
        "services",
        "configmaps",
        "serviceaccounts",
        "secrets",
      ]
    verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterroles", "clusterrolebindings", "roles", "rolebindings"]
    verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "statefulsets"]
    verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
  - apiGroups: ["mongodbcommunity.mongodb.com"]
    resources:
      [
        "mongodbcommunity",
        "mongodbcommunity/finalizers",
        "mongodbcommunity/spec",
        "mongodbcommunity/status",
      ]
    verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jac-orc
roleRef:
  kind: ClusterRole
  name: jac-orc
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: jac-orc
    # namespace: your_namespace
---
apiVersion: v1
kind: Secret
metadata:
  name: jac-orc
type: Opaque
stringData:
  MODULES: "{}"
  WORKER: "1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jac-orc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jac-orc
  template:
    metadata:
      labels:
        app: jac-orc
    spec:
      containers:
        - name: jac-orc
          image: python:3.13-slim
          ports:
            - containerPort: 8000
          command: ["/bin/sh", "-c"]
          args:
            - |
              apt update && apt install -y apt-transport-https ca-certificates curl gnupg git
              curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
              chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg
              echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list
              chmod 644 /etc/apt/sources.list.d/kubernetes.list
              apt update && apt install -y kubectl
              git clone --depth 1 -b enhancements/pod-manager-2 https://github.com/Jaseci-Labs/jaseci.git
              cd jaseci/jac-splice-orc
              pip install poetry && poetry install && poetry run prod
          envFrom:
            - secretRef:
                name: jac-orc
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            limits:
              cpu: "1"
              memory: 2000Mi
            requests:
              cpu: 500m
              memory: 1500Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: jac-orc
      serviceAccount: jac-orc
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
apiVersion: v1
kind: Service
metadata:
  name: jac-orc
spec:
  selector:
    app: jac-orc
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jac-reloader
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jac-reloader
rules:
  - apiGroups: [""]
    resources: ["secrets", "configmaps"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "daemonsets", "statefulsets"]
    verbs: ["list", "get", "update", "patch"]
  - apiGroups: ["extensions"]
    resources: ["deployments", "daemonsets"]
    verbs: ["list", "get", "update", "patch"]
  - apiGroups: ["batch"]
    resources: ["cronjobs"]
    verbs: ["list", "get"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["create", "delete", "list", "get"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jac-reloader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jac-reloader
subjects:
  - kind: ServiceAccount
    name: jac-reloader
    # namespace: your_namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jac-reloader
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: jac-reloader
  template:
    metadata:
      labels:
        app: jac-reloader
    spec:
      containers:
        - env:
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  divisor: "1"
                  resource: limits.cpu
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  divisor: "1"
                  resource: limits.memory
          image: "ghcr.io/stakater/reloader:latest"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /live
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: jac-reloader
          ports:
            - containerPort: 9090
              name: http
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "1"
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 512Mi
          securityContext: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: jac-reloader
