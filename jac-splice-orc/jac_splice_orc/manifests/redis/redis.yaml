apiVersion: v1
kind: Service
metadata:
  name: $g{name:"jac-redis"}
  namespace: $g{namespace:"default"}
spec:
  selector:
    pod: $g{name:"jac-redis"}
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $g{name:"jac-redis"}
  namespace: $g{namespace:"default"}
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: $g{name:"jac-redis"}
  template:
    metadata:
      labels:
        pod: $g{name:"jac-redis"}
    spec:
      containers:
        - name: jaseci-redis-master
          image: redis
          imagePullPolicy: IfNotPresent
          command:
            - redis-server
            - "/redis-master/redis.conf"
          resources:
            limits:
              cpu: $g{cpu:0.2}
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /redis-master-data
              name: data
            - mountPath: /redis-master
              name: config
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: $g{name:"jac-redis"}
            items:
              - key: redis-config
                path: redis.conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: $g{name:"jac-redis"}
  namespace: $g{namespace:"default"}
data:
  redis-config: |
    maxmemory $g{memory:"1000mb"}
    maxmemory-policy allkeys-lru
