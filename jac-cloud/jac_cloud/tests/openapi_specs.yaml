components:
  schemas:
    AttachSSO:
      description: Attach SSO Request Model.
      properties:
        email:
          title: Email
          type: string
        id:
          title: Id
          type: string
        platform:
          title: Platform
          type: string
      required:
      - platform
      - id
      - email
      title: AttachSSO
      type: object
    Body_api_entry_walker_post_with_body_and_file__node__post:
      properties:
        body:
          format: binary
          title: Body
          type: string
        multiple:
          items:
            format: binary
            type: string
          title: Multiple
          type: array
        single:
          format: binary
          title: Single
          type: string
      required:
      - body
      - single
      - multiple
      title: Body_api_entry_walker_post_with_body_and_file__node__post
      type: object
    Body_api_entry_walker_post_with_file__node__post:
      properties:
        multiple:
          items:
            format: binary
            type: string
          title: Multiple
          type: array
        single:
          format: binary
          title: Single
          type: string
        singleOptional:
          anyOf:
          - format: binary
            type: string
          - type: 'null'
          title: Singleoptional
      required:
      - single
      - multiple
      title: Body_api_entry_walker_post_with_file__node__post
      type: object
    Body_api_root_walker_post_with_body_and_file_post:
      properties:
        body:
          format: binary
          title: Body
          type: string
        multiple:
          items:
            format: binary
            type: string
          title: Multiple
          type: array
        single:
          format: binary
          title: Single
          type: string
      required:
      - body
      - single
      - multiple
      title: Body_api_root_walker_post_with_body_and_file_post
      type: object
    Body_api_root_walker_post_with_file_post:
      properties:
        multiple:
          items:
            format: binary
            type: string
          title: Multiple
          type: array
        single:
          format: binary
          title: Single
          type: string
        singleOptional:
          anyOf:
          - format: binary
            type: string
          - type: 'null'
          title: Singleoptional
      required:
      - single
      - multiple
      title: Body_api_root_walker_post_with_file_post
      type: object
    Child:
      properties:
        arr:
          items:
            type: integer
          title: Arr
          type: array
        enum_field:
          description: "Create a collection of name/value pairs.\n\nExample enumeration:\n\
            \n>>> class Color(Enum):\n...     RED = 1\n...     BLUE = 2\n...     GREEN\
            \ = 3\n\nAccess them by:\n\n- attribute access:\n\n  >>> Color.RED\n \
            \ <Color.RED: 1>\n\n- value lookup:\n\n  >>> Color(1)\n  <Color.RED: 1>\n\
            \n- name lookup:\n\n  >>> Color['RED']\n  <Color.RED: 1>\n\nEnumerations\
            \ can be iterated over, and know how many members they have:\n\n>>> len(Color)\n\
            3\n\n>>> list(Color)\n[<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN:\
            \ 3>]\n\nMethods can be added to enumerations, and members can have their\
            \ own\nattributes -- see the documentation for details."
          enum: []
          title: Enum
        json:
          additionalProperties:
            type: integer
          title: Json
          type: object
        val:
          title: Val
          type: integer
      required:
      - val
      - arr
      - json
      - enum_field
      title: Child
      type: object
    ContextResponse_NoneType_:
      properties:
        reports:
          anyOf:
          - items: {}
            type: array
          - type: 'null'
          title: Reports
        returns:
          anyOf:
          - items:
              type: 'null'
            type: array
          - type: 'null'
          title: Returns
        status:
          title: Status
          type: integer
      required:
      - status
      title: ContextResponse
      type: object
    ContextResponse_Union_NoneType__int__str__bool__Parent__list__dict__:
      properties:
        reports:
          anyOf:
          - items: {}
            type: array
          - type: 'null'
          title: Reports
        returns:
          anyOf:
          - items:
              anyOf:
              - type: integer
              - type: string
              - type: boolean
              - $ref: '#/components/schemas/Parent'
              - items: {}
                type: array
              - type: object
              - type: 'null'
            type: array
          - type: 'null'
          title: Returns
        status:
          title: Status
          type: integer
      required:
      - status
      title: ContextResponse
      type: object
    DetachSSO:
      description: Attach SSO Request Model.
      properties:
        platform:
          title: Platform
          type: string
      required:
      - platform
      title: DetachSSO
      type: object
    Enum:
      description: "Create a collection of name/value pairs.\n\nExample enumeration:\n\
        \n>>> class Color(Enum):\n...     RED = 1\n...     BLUE = 2\n...     GREEN\
        \ = 3\n\nAccess them by:\n\n- attribute access:\n\n  >>> Color.RED\n  <Color.RED:\
        \ 1>\n\n- value lookup:\n\n  >>> Color(1)\n  <Color.RED: 1>\n\n- name lookup:\n\
        \n  >>> Color['RED']\n  <Color.RED: 1>\n\nEnumerations can be iterated over,\
        \ and know how many members they have:\n\n>>> len(Color)\n3\n\n>>> list(Color)\n\
        [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]\n\nMethods can be added\
        \ to enumerations, and members can have their own\nattributes -- see the documentation\
        \ for details."
      enum: []
      title: Enum
    Expiration:
      description: Key Expiration.
      properties:
        count:
          default: 60
          exclusiveMinimum: 0.0
          title: Count
          type: integer
        interval:
          default: days
          enum:
          - seconds
          - minutes
          - hours
          - days
          title: Interval
          type: string
      title: Expiration
      type: object
    GenerateKey:
      description: User Creation Request Model.
      properties:
        expiration:
          $ref: '#/components/schemas/Expiration'
        name:
          minLength: 1
          title: Name
          type: string
        nodes:
          items:
            type: string
          title: Nodes
          type: array
        walkers:
          items:
            type: string
          title: Walkers
          type: array
      required:
      - name
      title: GenerateKey
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    KeyIDs:
      description: User Creation Request Model.
      properties:
        ids:
          items:
            type: string
          minItems: 1
          title: Ids
          type: array
      required:
      - ids
      title: KeyIDs
      type: object
    Parent:
      properties:
        arr:
          items:
            type: integer
          title: Arr
          type: array
        child:
          $ref: '#/components/schemas/Child'
        enum_field:
          description: "Create a collection of name/value pairs.\n\nExample enumeration:\n\
            \n>>> class Color(Enum):\n...     RED = 1\n...     BLUE = 2\n...     GREEN\
            \ = 3\n\nAccess them by:\n\n- attribute access:\n\n  >>> Color.RED\n \
            \ <Color.RED: 1>\n\n- value lookup:\n\n  >>> Color(1)\n  <Color.RED: 1>\n\
            \n- name lookup:\n\n  >>> Color['RED']\n  <Color.RED: 1>\n\nEnumerations\
            \ can be iterated over, and know how many members they have:\n\n>>> len(Color)\n\
            3\n\n>>> list(Color)\n[<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN:\
            \ 3>]\n\nMethods can be added to enumerations, and members can have their\
            \ own\nattributes -- see the documentation for details."
          enum: []
          title: Enum
        json:
          additionalProperties:
            type: integer
          title: Json
          type: object
        val:
          title: Val
          type: integer
      required:
      - val
      - arr
      - json
      - enum_field
      - child
      title: Parent
      type: object
    UserChangePassword:
      description: User Creation Request Model.
      properties:
        new_password:
          title: New Password
          type: string
        old_password:
          title: Old Password
          type: string
      required:
      - old_password
      - new_password
      title: UserChangePassword
      type: object
    UserForgotPassword:
      description: User Creation Request Model.
      properties:
        email:
          format: email
          title: Email
          type: string
      required:
      - email
      title: UserForgotPassword
      type: object
    UserRegister:
      properties:
        email:
          format: email
          title: Email
          type: string
        name:
          title: Name
          type: string
        password:
          title: Password
          type: string
      required:
      - email
      - password
      - name
      title: UserRegister
      type: object
    UserRequest:
      description: User Creation Request Model.
      properties:
        email:
          format: email
          title: Email
          type: string
        password:
          title: Password
          type: string
      required:
      - email
      - password
      title: UserRequest
      type: object
    UserResetPassword:
      description: User Creation Request Model.
      properties:
        code:
          title: Code
          type: string
        password:
          title: Password
          type: string
      required:
      - code
      - password
      title: UserResetPassword
      type: object
    UserVerification:
      description: User Verification Request Model.
      properties:
        code:
          title: Code
          type: string
      required:
      - code
      title: UserVerification
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    allow_other_root_access_body_model:
      properties:
        level:
          anyOf:
          - type: integer
          - type: string
          title: Level
        root_id:
          title: Root Id
          type: string
        via_all:
          title: Via All
          type: boolean
      required:
      - root_id
      title: allow_other_root_access_body_model
      type: object
    check_memory_sync_body_model:
      properties:
        other_node_id:
          title: Other Node Id
          type: string
      required:
      - other_node_id
      title: check_memory_sync_body_model
      type: object
    combination1_body_model:
      properties:
        c:
          title: C
          type: string
      required:
      - c
      title: combination1_body_model
      type: object
    combination2_body_model:
      properties:
        c:
          title: C
          type: string
      required:
      - c
      title: combination2_body_model
      type: object
    custom_status_code_body_model:
      properties:
        status:
          title: Status
          type: integer
      required:
      - status
      title: custom_status_code_body_model
      type: object
    delete_custom_object_body_model:
      properties:
        object_id:
          title: Object Id
          type: string
      required:
      - object_id
      title: delete_custom_object_body_model
      type: object
    disallow_other_root_access_body_model:
      properties:
        root_id:
          title: Root Id
          type: string
        via_all:
          title: Via All
          type: boolean
      required:
      - root_id
      title: disallow_other_root_access_body_model
      type: object
    get_custom_object_body_model:
      properties:
        object_id:
          title: Object Id
          type: string
      required:
      - object_id
      title: get_custom_object_body_model
      type: object
    post_partial_excluded_body_model:
      properties:
        a:
          title: A
          type: string
      required:
      - a
      title: post_partial_excluded_body_model
      type: object
    post_with_body_body_model:
      properties:
        a:
          title: A
          type: string
      required:
      - a
      title: post_with_body_body_model
      type: object
    update_custom_object_body_model:
      properties:
        object_id:
          title: Object Id
          type: string
      required:
      - object_id
      title: update_custom_object_body_model
      type: object
    update_nested_node_access_body_model:
      properties:
        access:
          anyOf:
          - type: string
          - type: 'null'
          title: Access
      title: update_nested_node_access_body_model
      type: object
  securitySchemes:
    APIKeyHeader:
      in: header
      name: test_key
      type: apiKey
    APIKeyQuery:
      in: query
      name: test_key
      type: apiKey
    HTTPBearer:
      scheme: bearer
      type: http
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.1.0
paths:
  /healthz:
    get:
      description: Healthz API.
      operationId: healthz_healthz_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Healthz
      tags:
      - monitoring
  /sso/attach:
    post:
      description: Generate token from user.
      operationId: sso_attach_sso_attach_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachSSO'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Sso Attach
      tags:
      - sso
  /sso/detach:
    delete:
      description: Generate token from user.
      operationId: sso_detach_sso_detach_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachSSO'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Sso Detach
      tags:
      - sso
  /sso/{platform}/{operation}:
    get:
      description: SSO Login API.
      operationId: sso_operation_sso__platform___operation__get
      parameters:
      - in: path
        name: platform
        required: true
        schema:
          title: Platform
          type: string
      - in: path
        name: operation
        required: true
        schema:
          title: Operation
          type: string
      - in: query
        name: redirect_uri
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Redirect Uri
      - in: query
        name: state
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: State
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Sso Operation
      tags:
      - sso
  /sso/{platform}/{operation}/callback:
    get:
      description: SSO Login API.
      operationId: sso_callback_sso__platform___operation__callback_get
      parameters:
      - in: path
        name: platform
        required: true
        schema:
          title: Platform
          type: string
      - in: path
        name: operation
        required: true
        schema:
          title: Operation
          type: string
      - in: query
        name: redirect_uri
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Redirect Uri
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Sso Callback
      tags:
      - sso
  /user/change_password:
    post:
      description: Register user API.
      operationId: change_password_user_change_password_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserChangePassword'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Change Password
      tags:
      - user
  /user/forgot_password:
    post:
      description: Forgot password API.
      operationId: forgot_password_user_forgot_password_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserForgotPassword'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Forgot Password
      tags:
      - user
  /user/login:
    post:
      description: Login user API.
      operationId: login_user_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Login
      tags:
      - user
  /user/register:
    post:
      description: Register user API.
      operationId: register_user_register_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Register
      tags:
      - user
  /user/reset_password:
    post:
      description: Reset password API.
      operationId: reset_password_user_reset_password_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserResetPassword'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Reset Password
      tags:
      - user
  /user/send-verification-code:
    post:
      description: Verify user API.
      operationId: send_verification_code_user_send_verification_code_post
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Send Verification Code
      tags:
      - user
  /user/verify:
    post:
      description: Verify user API.
      operationId: verify_user_verify_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserVerification'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Verify
      tags:
      - user
  /walker/allow_other_root_access:
    post:
      operationId: api_root_walker_allow_other_root_access_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/allow_other_root_access_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Allow Other Root Access Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /allow_other_root_access
      tags:
      - walker
  /walker/allow_other_root_access/{node}:
    post:
      operationId: api_entry_walker_allow_other_root_access__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/allow_other_root_access_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Allow Other Root Access  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /allow_other_root_access/{node}
      tags:
      - walker
  /walker/check_memory_sync:
    post:
      operationId: api_root_walker_check_memory_sync_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/check_memory_sync_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Check Memory Sync Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /check_memory_sync
      tags:
      - walker
  /walker/check_memory_sync/{node}:
    post:
      operationId: api_entry_walker_check_memory_sync__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/check_memory_sync_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Check Memory Sync  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /check_memory_sync/{node}
      tags:
      - walker
  /walker/check_populated_graph:
    post:
      operationId: api_root_walker_check_populated_graph_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Check Populated Graph Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /check_populated_graph
      tags:
      - walker
  /walker/check_populated_graph/{node}:
    post:
      operationId: api_entry_walker_check_populated_graph__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Check Populated Graph  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /check_populated_graph/{node}
      tags:
      - walker
  /walker/combination1:
    get:
      operationId: api_root_walker_combination1_get
      parameters:
      - in: query
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combination1_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Combination1 Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination1
      tags:
      - walker
    post:
      operationId: api_root_walker_combination1_post
      parameters:
      - in: query
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combination1_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Combination1 Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination1
      tags:
      - walker
  /walker/combination1/{node}:
    get:
      operationId: api_entry_walker_combination1__node__get
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      - in: query
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combination1_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Combination1  Node  Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination1/{node}
      tags:
      - walker
    post:
      operationId: api_entry_walker_combination1__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      - in: query
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combination1_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Combination1  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination1/{node}
      tags:
      - walker
  /walker/combination2/{a}:
    delete:
      operationId: api_root_walker_combination2__a__delete
      parameters:
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combination2_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Combination2  A  Delete
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination2/{a}
      tags:
      - walker
    get:
      operationId: api_root_walker_combination2__a__get
      parameters:
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combination2_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Combination2  A  Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination2/{a}
      tags:
      - walker
    head:
      operationId: api_root_walker_combination2__a__head
      parameters:
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combination2_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Combination2  A  Head
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination2/{a}
      tags:
      - walker
    options:
      operationId: api_root_walker_combination2__a__options
      parameters:
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Combination2  A  Options
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination2/{a}
      tags:
      - walker
    patch:
      operationId: api_root_walker_combination2__a__patch
      parameters:
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combination2_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Combination2  A  Patch
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination2/{a}
      tags:
      - walker
    post:
      operationId: api_root_walker_combination2__a__post
      parameters:
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combination2_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Combination2  A  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination2/{a}
      tags:
      - walker
    put:
      operationId: api_root_walker_combination2__a__put
      parameters:
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combination2_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Combination2  A  Put
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination2/{a}
      tags:
      - walker
    trace:
      operationId: api_root_walker_combination2__a__trace
      parameters:
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Combination2  A  Trace
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination2/{a}
      tags:
      - walker
  /walker/combination2/{node}/{a}:
    delete:
      operationId: api_entry_walker_combination2__node___a__delete
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combination2_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Combination2  Node   A  Delete
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination2/{node}/{a}
      tags:
      - walker
    get:
      operationId: api_entry_walker_combination2__node___a__get
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combination2_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Combination2  Node   A  Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination2/{node}/{a}
      tags:
      - walker
    head:
      operationId: api_entry_walker_combination2__node___a__head
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combination2_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Combination2  Node   A  Head
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination2/{node}/{a}
      tags:
      - walker
    options:
      operationId: api_entry_walker_combination2__node___a__options
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Combination2  Node   A  Options
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination2/{node}/{a}
      tags:
      - walker
    patch:
      operationId: api_entry_walker_combination2__node___a__patch
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combination2_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Combination2  Node   A  Patch
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination2/{node}/{a}
      tags:
      - walker
    post:
      operationId: api_entry_walker_combination2__node___a__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combination2_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Combination2  Node   A  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination2/{node}/{a}
      tags:
      - walker
    put:
      operationId: api_entry_walker_combination2__node___a__put
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combination2_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Combination2  Node   A  Put
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination2/{node}/{a}
      tags:
      - walker
    trace:
      operationId: api_entry_walker_combination2__node___a__trace
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Combination2  Node   A  Trace
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /combination2/{node}/{a}
      tags:
      - walker
  /walker/create_custom_object:
    post:
      operationId: api_root_walker_create_custom_object_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Create Custom Object Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /create_custom_object
      tags:
      - walker
  /walker/create_custom_object/{node}:
    post:
      operationId: api_entry_walker_create_custom_object__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Create Custom Object  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /create_custom_object/{node}
      tags:
      - walker
  /walker/create_graph:
    post:
      operationId: api_root_walker_create_graph_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Create Graph Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /create_graph
      tags:
      - walker
  /walker/create_graph/{node}:
    post:
      operationId: api_entry_walker_create_graph__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Create Graph  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /create_graph/{node}
      tags:
      - walker
  /walker/create_nested_node:
    post:
      operationId: api_root_walker_create_nested_node_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Create Nested Node Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /create_nested_node
      tags:
      - walker
  /walker/create_nested_node/{node}:
    post:
      operationId: api_entry_walker_create_nested_node__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Create Nested Node  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /create_nested_node/{node}
      tags:
      - walker
  /walker/custom_report:
    post:
      operationId: api_root_walker_custom_report_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Custom Report Post
          description: Successful Response
      summary: /custom_report
      tags:
      - walker
  /walker/custom_report/{node}:
    post:
      operationId: api_entry_walker_custom_report__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Custom Report  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: /custom_report/{node}
      tags:
      - walker
  /walker/custom_status_code:
    post:
      operationId: api_root_walker_custom_status_code_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/custom_status_code_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Custom Status Code Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /custom_status_code
      tags:
      - walker
  /walker/custom_status_code/{node}:
    post:
      operationId: api_entry_walker_custom_status_code__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/custom_status_code_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Custom Status Code  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /custom_status_code/{node}
      tags:
      - walker
  /walker/delete_custom_object:
    post:
      operationId: api_root_walker_delete_custom_object_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/delete_custom_object_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Delete Custom Object Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /delete_custom_object
      tags:
      - walker
  /walker/delete_custom_object/{node}:
    post:
      operationId: api_entry_walker_delete_custom_object__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/delete_custom_object_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Delete Custom Object  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /delete_custom_object/{node}
      tags:
      - walker
  /walker/delete_nested_edge:
    post:
      operationId: api_root_walker_delete_nested_edge_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Delete Nested Edge Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /delete_nested_edge
      tags:
      - walker
  /walker/delete_nested_edge/{node}:
    post:
      operationId: api_entry_walker_delete_nested_edge__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Delete Nested Edge  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /delete_nested_edge/{node}
      tags:
      - walker
  /walker/delete_nested_node:
    post:
      operationId: api_root_walker_delete_nested_node_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Delete Nested Node Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /delete_nested_node
      tags:
      - walker
  /walker/delete_nested_node/{node}:
    post:
      operationId: api_entry_walker_delete_nested_node__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Delete Nested Node  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /delete_nested_node/{node}
      tags:
      - walker
  /walker/detach_nested_node:
    post:
      operationId: api_root_walker_detach_nested_node_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Detach Nested Node Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /detach_nested_node
      tags:
      - walker
  /walker/detach_nested_node/{node}:
    post:
      operationId: api_entry_walker_detach_nested_node__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Detach Nested Node  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /detach_nested_node/{node}
      tags:
      - walker
  /walker/detach_node:
    post:
      operationId: api_root_walker_detach_node_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Detach Node Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /detach_node
      tags:
      - walker
  /walker/detach_node/{node}:
    post:
      operationId: api_entry_walker_detach_node__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Detach Node  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /detach_node/{node}
      tags:
      - walker
  /walker/different_return:
    post:
      operationId: api_root_walker_different_return_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_Union_NoneType__int__str__bool__Parent__list__dict__'
                - {}
                title: Response Api Root Walker Different Return Post
          description: Successful Response
      summary: /different_return
      tags:
      - walker
  /walker/different_return/{node}:
    post:
      operationId: api_entry_walker_different_return__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_Union_NoneType__int__str__bool__Parent__list__dict__'
                - {}
                title: Response Api Entry Walker Different Return  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: /different_return/{node}
      tags:
      - walker
  /walker/disallow_other_root_access:
    post:
      operationId: api_root_walker_disallow_other_root_access_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disallow_other_root_access_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Disallow Other Root Access Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /disallow_other_root_access
      tags:
      - walker
  /walker/disallow_other_root_access/{node}:
    post:
      operationId: api_entry_walker_disallow_other_root_access__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disallow_other_root_access_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Disallow Other Root Access  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /disallow_other_root_access/{node}
      tags:
      - walker
  /walker/get_all_query:
    get:
      operationId: api_root_walker_get_all_query_get
      parameters:
      - in: query
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Get All Query Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: /get_all_query
      tags:
      - walker
  /walker/get_all_query/{node}:
    get:
      operationId: api_entry_walker_get_all_query__node__get
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      - in: query
        name: a
        required: true
        schema:
          title: A
          type: string
      - in: query
        name: b
        required: true
        schema:
          title: B
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Get All Query  Node  Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: /get_all_query/{node}
      tags:
      - walker
  /walker/get_custom_object:
    post:
      operationId: api_root_walker_get_custom_object_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/get_custom_object_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Get Custom Object Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /get_custom_object
      tags:
      - walker
  /walker/get_custom_object/{node}:
    post:
      operationId: api_entry_walker_get_custom_object__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/get_custom_object_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Get Custom Object  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /get_custom_object/{node}
      tags:
      - walker
  /walker/get_no_body:
    get:
      operationId: api_root_walker_get_no_body_get
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Get No Body Get
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /get_no_body
      tags:
      - walker
  /walker/get_no_body/{node}:
    get:
      operationId: api_entry_walker_get_no_body__node__get
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Get No Body  Node  Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /get_no_body/{node}
      tags:
      - walker
  /walker/get_with_query:
    get:
      operationId: api_root_walker_get_with_query_get
      parameters:
      - in: query
        name: a
        required: true
        schema:
          title: A
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Get With Query Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /get_with_query
      tags:
      - walker
  /walker/get_with_query/{node}:
    get:
      operationId: api_entry_walker_get_with_query__node__get
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      - in: query
        name: a
        required: true
        schema:
          title: A
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Get With Query  Node  Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /get_with_query/{node}
      tags:
      - walker
  /walker/manual_create_nested_node:
    post:
      operationId: api_root_walker_manual_create_nested_node_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Manual Create Nested Node Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /manual_create_nested_node
      tags:
      - walker
  /walker/manual_create_nested_node/{node}:
    post:
      operationId: api_entry_walker_manual_create_nested_node__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Manual Create Nested Node  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /manual_create_nested_node/{node}
      tags:
      - walker
  /walker/manual_delete_nested_edge:
    post:
      operationId: api_root_walker_manual_delete_nested_edge_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Manual Delete Nested Edge Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /manual_delete_nested_edge
      tags:
      - walker
  /walker/manual_delete_nested_edge/{node}:
    post:
      operationId: api_entry_walker_manual_delete_nested_edge__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Manual Delete Nested Edge  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /manual_delete_nested_edge/{node}
      tags:
      - walker
  /walker/manual_delete_nested_node:
    post:
      operationId: api_root_walker_manual_delete_nested_node_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Manual Delete Nested Node Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /manual_delete_nested_node
      tags:
      - walker
  /walker/manual_delete_nested_node/{node}:
    post:
      operationId: api_entry_walker_manual_delete_nested_node__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Manual Delete Nested Node  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /manual_delete_nested_node/{node}
      tags:
      - walker
  /walker/manual_detach_nested_node:
    post:
      operationId: api_root_walker_manual_detach_nested_node_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Manual Detach Nested Node Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /manual_detach_nested_node
      tags:
      - walker
  /walker/manual_detach_nested_node/{node}:
    post:
      operationId: api_entry_walker_manual_detach_nested_node__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Manual Detach Nested Node  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /manual_detach_nested_node/{node}
      tags:
      - walker
  /walker/manual_update_nested_node:
    post:
      operationId: api_root_walker_manual_update_nested_node_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Manual Update Nested Node Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /manual_update_nested_node
      tags:
      - walker
  /walker/manual_update_nested_node/{node}:
    post:
      operationId: api_entry_walker_manual_update_nested_node__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Manual Update Nested Node  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /manual_update_nested_node/{node}
      tags:
      - walker
  /walker/populate_graph:
    post:
      operationId: api_root_walker_populate_graph_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Populate Graph Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /populate_graph
      tags:
      - walker
  /walker/populate_graph/{node}:
    post:
      operationId: api_entry_walker_populate_graph__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Populate Graph  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /populate_graph/{node}
      tags:
      - walker
  /walker/post_all_excluded:
    post:
      operationId: api_root_walker_post_all_excluded_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Post All Excluded Post
          description: Successful Response
      summary: /post_all_excluded
      tags:
      - walker
  /walker/post_all_excluded/{node}:
    post:
      operationId: api_entry_walker_post_all_excluded__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Post All Excluded  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: /post_all_excluded/{node}
      tags:
      - walker
  /walker/post_no_body:
    post:
      operationId: api_root_walker_post_no_body_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Post No Body Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /post_no_body
      tags:
      - walker
  /walker/post_no_body/{node}:
    post:
      operationId: api_entry_walker_post_no_body__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Post No Body  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /post_no_body/{node}
      tags:
      - walker
  /walker/post_partial_excluded:
    post:
      operationId: api_root_walker_post_partial_excluded_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_partial_excluded_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Post Partial Excluded Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /post_partial_excluded
      tags:
      - walker
  /walker/post_partial_excluded/{node}:
    post:
      operationId: api_entry_walker_post_partial_excluded__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_partial_excluded_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Post Partial Excluded  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /post_partial_excluded/{node}
      tags:
      - walker
  /walker/post_path_var/{a}:
    get:
      operationId: api_root_walker_post_path_var__a__get
      parameters:
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Post Path Var  A  Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /post_path_var/{a}
      tags:
      - walker
    post:
      operationId: api_root_walker_post_path_var__a__post
      parameters:
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Post Path Var  A  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /post_path_var/{a}
      tags:
      - walker
  /walker/post_path_var/{node}/{a}:
    get:
      operationId: api_entry_walker_post_path_var__node___a__get
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Post Path Var  Node   A  Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /post_path_var/{node}/{a}
      tags:
      - walker
    post:
      operationId: api_entry_walker_post_path_var__node___a__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      - in: path
        name: a
        required: true
        schema:
          title: A
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Post Path Var  Node   A  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /post_path_var/{node}/{a}
      tags:
      - walker
  /walker/post_with_body:
    post:
      operationId: api_root_walker_post_with_body_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_with_body_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Post With Body Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /post_with_body
      tags:
      - walker
  /walker/post_with_body/{node}:
    post:
      operationId: api_entry_walker_post_with_body__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_with_body_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Post With Body  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /post_with_body/{node}
      tags:
      - walker
  /walker/post_with_body_and_file:
    post:
      operationId: api_root_walker_post_with_body_and_file_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_api_root_walker_post_with_body_and_file_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Post With Body And File Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: /post_with_body_and_file
      tags:
      - walker
  /walker/post_with_body_and_file/{node}:
    post:
      operationId: api_entry_walker_post_with_body_and_file__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_api_entry_walker_post_with_body_and_file__node__post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Post With Body And File  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: /post_with_body_and_file/{node}
      tags:
      - walker
  /walker/post_with_file:
    post:
      operationId: api_root_walker_post_with_file_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_api_root_walker_post_with_file_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Post With File Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /post_with_file
      tags:
      - walker
  /walker/post_with_file/{node}:
    post:
      operationId: api_entry_walker_post_with_file__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_api_entry_walker_post_with_file__node__post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Post With File  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /post_with_file/{node}
      tags:
      - walker
  /walker/purge_populated_graph:
    post:
      operationId: api_root_walker_purge_populated_graph_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Purge Populated Graph Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /purge_populated_graph
      tags:
      - walker
  /walker/purge_populated_graph/{node}:
    post:
      operationId: api_entry_walker_purge_populated_graph__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Purge Populated Graph  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /purge_populated_graph/{node}
      tags:
      - walker
  /walker/traverse_graph:
    post:
      operationId: api_root_walker_traverse_graph_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Traverse Graph Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /traverse_graph
      tags:
      - walker
  /walker/traverse_graph/{node}:
    post:
      operationId: api_entry_walker_traverse_graph__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Traverse Graph  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /traverse_graph/{node}
      tags:
      - walker
  /walker/traverse_populated_graph:
    post:
      operationId: api_root_walker_traverse_populated_graph_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Traverse Populated Graph Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /traverse_populated_graph
      tags:
      - walker
  /walker/traverse_populated_graph/{node}:
    post:
      operationId: api_entry_walker_traverse_populated_graph__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Traverse Populated Graph  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /traverse_populated_graph/{node}
      tags:
      - walker
  /walker/update_custom_object:
    post:
      operationId: api_root_walker_update_custom_object_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_custom_object_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Update Custom Object Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /update_custom_object
      tags:
      - walker
  /walker/update_custom_object/{node}:
    post:
      operationId: api_entry_walker_update_custom_object__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_custom_object_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Update Custom Object  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /update_custom_object/{node}
      tags:
      - walker
  /walker/update_graph:
    post:
      operationId: api_root_walker_update_graph_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Update Graph Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /update_graph
      tags:
      - walker
  /walker/update_graph/{node}:
    post:
      operationId: api_entry_walker_update_graph__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Update Graph  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /update_graph/{node}
      tags:
      - walker
  /walker/update_nested_node:
    post:
      operationId: api_root_walker_update_nested_node_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Update Nested Node Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /update_nested_node
      tags:
      - walker
  /walker/update_nested_node/{node}:
    post:
      operationId: api_entry_walker_update_nested_node__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Update Nested Node  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /update_nested_node/{node}
      tags:
      - walker
  /walker/update_nested_node_access:
    post:
      operationId: api_root_walker_update_nested_node_access_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_nested_node_access_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Update Nested Node Access Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /update_nested_node_access
      tags:
      - walker
  /walker/update_nested_node_access/{node}:
    post:
      operationId: api_entry_walker_update_nested_node_access__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_nested_node_access_body_model'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Update Nested Node Access  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /update_nested_node_access/{node}
      tags:
      - walker
  /walker/visit_nested_node:
    post:
      operationId: api_root_walker_visit_nested_node_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Visit Nested Node Post
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: /visit_nested_node
      tags:
      - walker
  /walker/visit_nested_node/{node}:
    post:
      operationId: api_entry_walker_visit_nested_node__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Visit Nested Node  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: /visit_nested_node/{node}
      tags:
      - walker
  /walker/visit_sequence:
    post:
      operationId: api_root_walker_visit_sequence_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Walker Visit Sequence Post
          description: Successful Response
      summary: /visit_sequence
      tags:
      - walker
  /walker/visit_sequence/{node}:
    post:
      operationId: api_entry_walker_visit_sequence__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Walker Visit Sequence  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: /visit_sequence/{node}
      tags:
      - walker
  /webhook:
    get:
      description: Get keys API.
      operationId: get_webhook_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get
      tags:
      - webhook
  /webhook/delete:
    delete:
      description: Delete keys API.
      operationId: delete_webhook_delete_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyIDs'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete
      tags:
      - webhook
  /webhook/extend/{id}:
    patch:
      description: Generate key API.
      operationId: extend_webhook_extend__id__patch
      parameters:
      - in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expiration'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Extend
      tags:
      - webhook
  /webhook/generate-key:
    post:
      description: Generate key API.
      operationId: generate_key_webhook_generate_key_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateKey'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Key
      tags:
      - webhook
  /webhook/walker/webhook_by_body:
    post:
      operationId: api_root_webhook_walker_webhook_by_body_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Webhook Walker Webhook By Body Post
          description: Successful Response
      summary: /webhook_by_body
      tags:
      - webhook-walker
  /webhook/walker/webhook_by_body/{node}:
    post:
      operationId: api_entry_webhook_walker_webhook_by_body__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Webhook Walker Webhook By Body  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: /webhook_by_body/{node}
      tags:
      - webhook-walker
  /webhook/walker/webhook_by_header:
    post:
      operationId: api_root_webhook_walker_webhook_by_header_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Webhook Walker Webhook By Header Post
          description: Successful Response
      security:
      - APIKeyHeader: []
      summary: /webhook_by_header
      tags:
      - webhook-walker
  /webhook/walker/webhook_by_header/{node}:
    post:
      operationId: api_entry_webhook_walker_webhook_by_header__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Webhook Walker Webhook By Header  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyHeader: []
      summary: /webhook_by_header/{node}
      tags:
      - webhook-walker
  /webhook/walker/webhook_by_path/{node}/{test_key}:
    post:
      operationId: api_entry_webhook_walker_webhook_by_path__node___test_key__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Webhook Walker Webhook By Path  Node   Test
                  Key  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: /webhook_by_path/{node}/{test_key}
      tags:
      - webhook-walker
  /webhook/walker/webhook_by_path/{test_key}:
    post:
      operationId: api_root_webhook_walker_webhook_by_path__test_key__post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Webhook Walker Webhook By Path  Test Key  Post
          description: Successful Response
      summary: /webhook_by_path/{test_key}
      tags:
      - webhook-walker
  /webhook/walker/webhook_by_query:
    post:
      operationId: api_root_webhook_walker_webhook_by_query_post
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Root Webhook Walker Webhook By Query Post
          description: Successful Response
      security:
      - APIKeyQuery: []
      summary: /webhook_by_query
      tags:
      - webhook-walker
  /webhook/walker/webhook_by_query/{node}:
    post:
      operationId: api_entry_webhook_walker_webhook_by_query__node__post
      parameters:
      - in: path
        name: node
        required: true
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Node
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContextResponse_NoneType_'
                - {}
                title: Response Api Entry Webhook Walker Webhook By Query  Node  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyQuery: []
      summary: /webhook_by_query/{node}
      tags:
      - webhook-walker