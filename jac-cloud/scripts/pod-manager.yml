apiVersion: v1
kind: Namespace
metadata:
  name: littlex

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jac-orc
  namespace: littlex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jac-orc
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: jac-orc
    spec:
      containers:
        - name: jac-orc
          image: ashishmahendra/jac-splice-orc:0.0.8
          ports:
            - containerPort: 8000
              protocol: TCP
          env:
            - name: SERVICE_TYPE
              value: pod_manager
            - name: NAMESPACE
              value: littlex
            - name: IMAGE_NAME
              value: ashishmahendra/jac-splice-orc:0.0.8
          resources:
            limits:
              cpu: '1'
              memory: 2000Mi
            requests:
              cpu: 500m
              memory: 1500Mi
          volumeMounts:
            - name: config-vol
              mountPath: /cfg
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      volumes:
        - name: config-vol
          configMap:
            name: jac-orc
            items:
              - key: jac-orc-module-config.json
                path: jac-orc-module-config.json
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: jac-orc
      serviceAccount: jac-orc
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: jac-orc
  namespace: littlex

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jac-orc
rules:
  - apiGroups: [""]
    resources:
      - "namespaces"
      - "pods"
      - "services"
      - "configmaps"
    verbs: ["get", "list", "create", "delete", "watch", "patch", "update"]
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["get", "list", "create", "delete", "watch", "patch", "update"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings"]
    verbs: ["get", "list", "create", "delete", "watch", "patch", "update"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "create", "delete", "watch", "patch", "update"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jac-orc
subjects:
  - kind: ServiceAccount
    name: jac-orc
    namespace: littlex
roleRef:
  kind: ClusterRole
  name: jac-orc
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: jac-orc
  namespace: littlex
data:
  jac-orc-module-config.json: |-
    {
      "numpy": {
        "lib_mem_size_req": "100Mi",
        "dependency": [],
        "lib_cpu_req": "500m",
        "load_type": "remote"
      },
      "transformers": {
        "lib_mem_size_req": "2000Mi",
        "dependency": [
          "torch",
          "transformers"
        ],
        "lib_cpu_req": "1.0",
        "load_type": "remote"
      },
      "sentence_transformers": {
        "lib_mem_size_req": "2000Mi",
        "dependency": [
          "sentence-transformers"
        ],
        "lib_cpu_req": "1.0",
        "load_type": "remote"
      }
    }
